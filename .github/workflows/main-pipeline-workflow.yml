name: "main pipeline"
on:
  workflow_run:
    workflows:
      - Pull Request clean-up
    types:
      - completed
    branch: main
permissions:
  id-token: write # required to use OIDC authentication
  contents: read # required to checkout the code from the repo

jobs:
  deploy:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - name: set STAGE variable in environment for next steps
        run: echo "STAGE=pr-${{ env.GITHUB_SHA_SHORT }}-${{ env.GITHUB_EVENT_REF_SLUG }}" >> $GITHUB_ENV

      - name: create a github deployment
        uses: bobheadxi/deployments@v0.5.2
        id: deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: ${{ env.STAGE }}
          ref: ${{ github.head_ref }}
          no_override: false
          transient: true

      - name: checkout the files
        uses: actions/checkout@v2

      - name: fet tag for docker image
        id: docker_tag
        uses: rlespinasse/github-slug-action@v3.x
      - name: set STAGE variable in environment for next steps
        run: |
          echo Preparing environment variables
          TAG=$(echo ${{ github.event.number }} | cut -c 1-7) 
          echo $TAG
          cat .env
          sed -i '/TAG/c\TAG='"${TAG}"'' .env
          cat .env
          echo "TAG=$TAG" >> $GITHUB_ENV  


      - name: Assume role using OIDC
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: arn:aws:iam::802288441694:role/mmandic223-DevOpsMCLevi9FinalProject-deploy
          aws-region: eu-west-1

      - name: cdk diff networking-stack-mm
        uses: youyo/aws-cdk-github-actions@v2
        with:
          cdk_subcommand: 'diff'
          actions_comment: false
          cdk_stack: 'networking-stack-mm'

      # - name: cdk diff lambda-api-dynamo-stack-mm
      #   uses: youyo/aws-cdk-github-actions@v2
      #   with:
      #     cdk_subcommand: 'diff'
      #     actions_comment: false
      #     cdk_stack: 'lambda-api-dynamo-stack-mm'

      # - name: cdk deploy networking-stack-mm
      #   uses: youyo/aws-cdk-github-actions@v2
      #   with:
      #     cdk_subcommand: 'deploy'
      #     actions_comment: false
      #     cdk_args: '--require-approval never'
      #     cdk_stack: 'networking-stack-mm'

      # - name: cdk deploy lambda-api-dynamo-stack-mm
      #   uses: youyo/aws-cdk-github-actions@v2
      #   with:
      #     cdk_subcommand: 'deploy'
      #     actions_comment: false
      #     cdk_args: '--require-approval never'
      #     cdk_stack: 'lambda-api-dynamo-stack-mm'


      # - name: inject slug/short variables
      #   uses: rlespinasse/github-slug-action@v3.x

      # - name: set APIID variable in environment for next steps
      #   run: echo "APIID=$(aws cloudformation --region eu-west-1 describe-stacks --stack-name lambda-api-dynamo-stack-mm --query 'Stacks[0].Outputs[?OutputKey==`apiid`].OutputValue' --output text)" >> $GITHUB_ENV


      # - name: update APIID in swagger.json
      #   run: cat ./aws_final_project/EcsCluster/swagger.json | jq '(.paths."/masterclass"[].parameters[] | select(.default)).default |= "'${{ env.APIID }}'"' ./aws_final_project/EcsCluster/swagger.json > parsing.txt && cp parsing.txt ./aws_final_project/EcsCluster/swagger.json


      # - name: login to ecr
      #   run: aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 802288441694.dkr.ecr.eu-west-1.amazonaws.com

      # - name: build image
      #   run: docker build -t markomandic/openapiui ./aws_final_project/EcsCluster/

      # - name: tag image
      #   run: docker tag markomandic/openapiui 802288441694.dkr.ecr.eu-west-1.amazonaws.com/markomandicecrrepo:${{ env.TAG }}

      # - name: push image
      #   run: docker push 802288441694.dkr.ecr.eu-west-1.amazonaws.com/markomandicecrrepo:${{ env.TAG }}
      
      # - name: cdk diff ecs-cluster-stack-mm
      #   uses: youyo/aws-cdk-github-actions@v2
      #   with:
      #     cdk_subcommand: 'diff'
      #     actions_comment: false
      #     cdk_stack: 'ecs-cluster-stack-mm'

      # - name: cdk deploy ecs-cluster-stack-mm
      #   uses: youyo/aws-cdk-github-actions@v2
      #   with:
      #     cdk_subcommand: 'deploy'
      #     actions_comment: false
      #     cdk_args: '--require-approval never'
      #     cdk_stack: 'ecs-cluster-stack-mm'

      - name: update the github deployment status
        uses: bobheadxi/deployments@v0.5.2
        if: always()
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          env_url: ${{ steps.cdk_deploy.outputs.env_url }}

      # - name: delete the github deployments and the corresponding environment
      #   uses: strumwolf/delete-deployment-environment@v1.1.0
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     environment: ${{ env.STAGE }}
